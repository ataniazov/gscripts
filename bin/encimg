#!/usr/bin/env python2
import sys, os
import subprocess

def run(cmd):
    r = subprocess.Popen(cmd, shell=True).wait()
    if r:
        exit(r)

def print_usage_and_exit():
    print "usage:   encimg create imgpath size fstype"
    print "         encimg mount imgpath mntdir"
    exit(1)

def command_create():
    if len(sys.argv) != 5:
        print_usage_and_exit()
    _, _, filepath, size, fstype = sys.argv

    if size[-1] in "kKmMgG":
        size_suffix = size[-1]
        size = int(size[:-1])
    else:
        size_suffix = ""
        size = int(size)

    if size_suffix in "kK":
        size <<= 10
    elif size_suffix in "mM":
        size <<= 20
    elif size_suffix in "gG":
        size <<= 30

    run("randomgen %s > %s" % (size, filepath))
    run("cryptsetup --verify-passphrase luksFormat %s -c aes-xts-plain64 -s 512 -h sha512" % filepath)

    luks_name = "new_%s" % os.getpid()
    run("cryptsetup luksOpen %s %s" % (filepath, luks_name))
    run("mkfs -t %s /dev/mapper/%s" % (fstype, luks_name))
    run("cryptsetup luksClose %s" % luks_name)

def command_mount():
    if len(sys.argv) != 4:
        print_usage_and_exit()
    _, _, filepath, mntdir = sys.argv

    luks_name = "disk_%s" % os.getpid()
    run("cryptsetup luksOpen %s %s" % (filepath, luks_name))
    run("mount /dev/mapper/%s %s" % (luks_name, mntdir))

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print_usage_and_exit()
    command = sys.argv[1]

    if command == "create":
        command_create()
    elif command == "mount":
        command_mount()
    else:
        print_usage_and_exit()
